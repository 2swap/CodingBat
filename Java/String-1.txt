public String helloName(String name) {  return "Hello "+name+"!";}public String makeAbba(String a, String b) {  return a+b+b+a;}public String makeTags(String tag, String word) {  return "<"+tag+">"+word+"</"+tag+">";}public String makeOutWord(String out, String word) {  return out.substring(0,2)+word+out.substring(2);}public String extraEnd(String str) {  String m=str.substring(str.length()-2);  return m+m+m;}public String firstTwo(String str) {  return str.substring(0,Math.min(2,str.length()));}public String firstHalf(String str) {  return str.substring(0,str.length()/2);}public String withoutEnd(String str) {  return str.substring(1,str.length()-1);}public String comboString(String a, String b) {  String temp=a;  if(a.length()>b.length()){    a=b;    b=temp;  }  return a+b+a;}public String nonStart(String a, String b) {  return a.substring(1)+b.substring(1);}public String left2(String str) {  return str.substring(2)+str.substring(0,2);}public String right2(String str) {  return str.substring(str.length()-2)+str.substring(0,str.length()-2);}public String theEnd(String str, boolean front) {  return ""+str.charAt(front?0:str.length()-1);}public String withouEnd2(String str) {  return str.length()<2?"":str.substring(1,str.length()-1);}public String middleTwo(String str) {  return str.substring(str.length()/2-1,str.length()/2+1);}public boolean endsLy(String str) {  return str.endsWith("ly");}public String nTwice(String str, int n) {  return str.substring(0,n)+str.substring(str.length()-n);}public String twoChar(String str, int index) {  return index<0||index+2>str.length()?str.substring(0,2):str.substring(index,index+2);}public String middleThree(String str) {  return str.substring(str.length()/2-1,str.length()/2+2);}public boolean hasBad(String str) {  return str.matches("^.bad.*")||str.startsWith("bad");}public String atFirst(String str) {  return (str.substring(0,Math.min(str.length(),2))+"@@").substring(0,2);}public String lastChars(String a, String b) {  a=a.length()<1?"@":a;  b=b.length()<1?"@":b;  return a.charAt(0)+""+b.charAt(b.length()-1);}public String conCat(String a, String b) {  return a+(a.length()*b.length()!=0&&a.charAt(a.length()-1)==b.charAt(0)?b.substring(1):b);}public String lastTwo(String str) {  int l=str.length()-2;  return l<0?str:str.substring(0,l)+str.charAt(l+1)+str.charAt(l);}public String seeColor(String str) {  return str.startsWith("red")?"red":str.startsWith("blue")?"blue":"";}public boolean frontAgain(String str) {  return str.length()<2?false:str.substring(0,2).equals(str.substring(str.length()-2));}public String minCat(String a, String b) {  int n=Math.min(a.length(),b.length());  return a.substring(a.length()-n)+b.substring(b.length()-n);}public String extraFront(String str) {  String o=str.substring(0,Math.min(str.length(),2));  return o+o+o;}public String without2(String str) {  return str.length()<2||!str.endsWith(str.substring(0,2))?str:str.substring(2);}public String deFront(String str) {      return (str.charAt(0)=='a'?"a":"")+(str.charAt(1)=='b'?"b":"")+str.substring(2);}public String startWord(String str, String word) {  int w=word.length();  return w>str.length()?"":word.substring(1).equals(str.substring(1,w))?str.substring(0,w):"";}public String withoutX(String str) {  return str.length()<2?str.replace("x",""):str.substring(0,1).replace("x","")+str.substring(1,str.length()-1)+str.substring(str.length()-1).replace("x","");}public String withoutX2(String str) {  int a=Math.min(2,str.length());  String f=str.substring(0,a).replaceAll("x","");  return f+str.substring(a);}