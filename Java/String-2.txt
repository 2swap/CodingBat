public String doubleChar(String str) {  String o="";  for(int i=0;i<str.length()*2;i++)    o+=str.charAt(i/2);  return o;}public int countHi(String str) {  return str.replaceAll("i","i ").split("hi").length-1;}public boolean catDog(String str) {  String c="cat",d="dog";  while(str.contains(c)&str.contains(d))    str=str.replaceFirst(c,"").replaceFirst(d,"");  return str.contains(c)==str.contains(d);}public int countCode(String str) {  return str.replaceAll("co.e","~ ").split("~").length-1;}public boolean endOther(String a, String b) {  a=a.toLowerCase();  b=b.toLowerCase();  return a.endsWith(b)|b.endsWith(a);}public boolean xyzThere(String str) {  return str.matches(".*(^|[^.])xyz.*");}public boolean bobThere(String str) {  return str.matches(".*b.b.*");}public boolean xyBalance(String str) {  return str.lastIndexOf("y")>=str.lastIndexOf("x");}public String mixString(String a, String b) {  String o = "";  for(int i=0,c=a.length(),d=b.length();i<(c>d?c:d);i++)    o+=(i<c?a.charAt(i)+"":"")+(i<d?b.charAt(i):"");  return o;}public String repeatEnd(String str, int n) {  String o=str.substring(str.length()-n),r="";  for(n=n;n-->0;)    r+=o;  return r;}public String repeatFront(String str, int n) {  for(str=str.substring(0,n);n>0;)    str+=str.substring(0,--n);  return str;}public String repeatSeparator(String word, String sep, int count) {  for(count=count,sep=sep+word;--count>0;)    word+=sep;  return count==0?word:"";}public boolean prefixAgain(String str, int n) {  return str.substring(n).contains(str.substring(0,n));}public boolean xyzMiddle(String str) {  int i;  while((i=str.length())>4)    str=str.substring(1,i-1);  return str.contains("xyz");}public String getSandwich(String str) {  String b="bread";  return str.replace(b,b+" ").split(b).length>2?str.substring(str.indexOf(b)+5,str.lastIndexOf(b)):"";}public boolean sameStarChar(String str) {  for(int i=1;i<str.length()-1;)    if(str.charAt(i)=='*'&str.charAt(++i)!=str.charAt(i-2))      return false;  return true;}public String oneTwo(String str) {  String o="";  for(int i=0;i<str.length()-2;i+=3)    o+=str.substring(i+1,i+3)+str.charAt(i);  return o;}public String zipZap(String str) {  return str.replaceAll("z.p","zp");}public String starOut(String str) {  int l=str.length();  String o="";  for(int i=0;i<l;)    if(!(str.charAt(i)=='*'|(i>0&&str.charAt(i-1)=='*')|(++i<l&&str.charAt(i)=='*')))      o+=str.charAt(i-1);  return o;}public String plusOut(String str, String word) {  String[] p=str.split(java.util.regex.Pattern.quote(word),-1);  str="";  for(String s:p)    str+=s.replaceAll(".","\\+")+word;  return str.substring(0,str.length()-word.length());}public String wordEnds(String str, String word) {  String[] p=str.split(word,-1);  str="";  for(int i=1;i<p.length;i++){    String e;    if(i!=1|p[0].length()>0)str+=(e=(p[i-1].length()>0?p[i-1]:word)).substring(Math.max(e.length()-1,0));    if(i!=p.length-1|p[p.length-1].length()>0)str+=(e=(p[i].length()>0?p[i]:word)).substring(0,Math.min(e.length(),1));}  return str;}