public boolean makeBricks(int small, int big, int goal) {  return Math.min(big,goal/5)*5+small>=goal;}public int loneSum(int a, int b, int c) {  return (a==b|a==c?0:a)+(a==b|b==c?0:b)+(c==b|a==c?0:c);}public int luckySum(int a, int b, int c) {  return a==13?0:a+(b==13?0:b+(c==13?0:c));}public int noTeenSum(int a, int b, int c) {  return t(a)+t(b)+t(c);}public int t(int x){  return x<13|x>19|x==15|x==16?x:0;}public int roundSum(int a, int b, int c) {  return 10*(int)(Math.round(a/10.)+Math.round(b/10.)+Math.round(c/10.));}public boolean closeFar(int a, int b, int c) {  return Math.abs(a-b)<2&Math.abs(a-c)>1&Math.abs(b-c)>1|Math.abs(a-c)<2&(Math.abs(b-c)>1&Math.abs(b-a)>1);}public int blackjack(int a, int b) {  a=a>21?0:a;  b=b>21?0:b;  return a>b?a:b;}public boolean evenlySpaced(int a, int b, int c) {  int e=Math.abs(b-a),f=Math.abs(c-b),g=Math.abs(c-a);  return e+f+g==2*Math.max(e,Math.max(f,g))&e+f+g==4*Math.min(f,g);}public int makeChocolate(int small, int big, int goal) {  int b=Math.min(goal/5,big)*5;  return b+small<goal?-1:goal-b;}